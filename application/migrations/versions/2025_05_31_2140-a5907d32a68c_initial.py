"""initial

Revision ID: a5907d32a68c
Revises:
Create Date: 2025-05-31 21:40:51.697855

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy import FetchedValue

# revision identifiers, used by Alembic.
revision: str = "a5907d32a68c"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "config",
        sa.Column("key", sa.String(), nullable=False),
        sa.Column("value", sa.String(), nullable=False),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("key"),
    )
    op.create_table(
        "instrument",
        sa.Column(
            "id", sa.Uuid(), server_default=FetchedValue(), nullable=False
        ),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("ticker", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("ticker"),
    )
    op.create_table(
        "outbox",
        sa.Column(
            "id", sa.Uuid(), server_default=FetchedValue(), nullable=False
        ),
        sa.Column("payload", sa.String(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "is_sent", sa.Boolean(), server_default="False", nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "transaction",
        sa.Column(
            "id", sa.Uuid(), server_default=FetchedValue(), nullable=False
        ),
        sa.Column("ticker", sa.String(), nullable=False),
        sa.Column("qty", sa.Integer(), nullable=False),
        sa.Column("price", sa.Integer(), nullable=False),
        sa.Column(
            "timestamp",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_transaction_ticker"), "transaction", ["ticker"], unique=False
    )
    op.create_table(
        "users",
        sa.Column(
            "id", sa.Uuid(), server_default=FetchedValue(), nullable=False
        ),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("role", sa.String(), server_default="USER", nullable=False),
        sa.Column("api_key", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("api_key"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "balances",
        sa.Column(
            "id", sa.Uuid(), server_default=FetchedValue(), nullable=False
        ),
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.Column("ticker", sa.String(), nullable=False),
        sa.Column("qty", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_balances_ticker"), "balances", ["ticker"], unique=False
    )
    op.create_index(
        op.f("ix_balances_user_id"), "balances", ["user_id"], unique=False
    )
    op.create_table(
        "orders",
        sa.Column(
            "id", sa.Uuid(), server_default=FetchedValue(), nullable=False
        ),
        sa.Column(
            "status",
            sa.Enum(
                "new",
                "executed",
                "partially_executed",
                "cancelled",
                name="orderstatus",
            ),
            nullable=False,
        ),
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.Column(
            "timestamp",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "direction",
            sa.Enum("buy", "sell", name="orderdirection"),
            nullable=False,
        ),
        sa.Column("ticker", sa.String(), nullable=False),
        sa.Column("qty", sa.Integer(), nullable=False),
        sa.Column("price", sa.Integer(), nullable=True),
        sa.Column("filled", sa.Integer(), server_default="0", nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_orders_ticker"), "orders", ["ticker"], unique=False
    )
    op.create_index(
        op.f("ix_orders_user_id"), "orders", ["user_id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_orders_user_id"), table_name="orders")
    op.drop_index(op.f("ix_orders_ticker"), table_name="orders")
    op.drop_table("orders")
    op.drop_index(op.f("ix_balances_user_id"), table_name="balances")
    op.drop_index(op.f("ix_balances_ticker"), table_name="balances")
    op.drop_table("balances")
    op.drop_table("users")
    op.drop_index(op.f("ix_transaction_ticker"), table_name="transaction")
    op.drop_table("transaction")
    op.drop_table("outbox")
    op.drop_table("instrument")
    op.drop_table("config")
    sa.Enum(name="orderstatus").drop(op.get_bind(), checkfirst=False)
    sa.Enum(name="orderdirection").drop(op.get_bind(), checkfirst=False)
    # ### end Alembic commands ###
